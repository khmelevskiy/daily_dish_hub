# ❗️ Telegram Bot Token
BOT_TOKEN=

# Site display settings (public-safe)
SITE_NAME=Canteen Menu
SITE_DESCRIPTION=Fresh and tasty dishes every day

# Currency settings (public-safe)
# ISO currency code (e.g., GEL, USD, EUR)
CURRENCY_CODE=GEL
# Display symbol used in UI
CURRENCY_SYMBOL=₾
# Locale tag for formatting (e.g., ru-GE, en-US)
CURRENCY_LOCALE=ru-GE

# JWT settings
# ❗️ Required: 'SECRET_KEY' should be a strong, random string
SECRET_KEY=
ACCESS_TOKEN_EXPIRE_MINUTES=1440
# Optional JWT issuer (who issued the token)
JWT_ISSUER=
# Optional JWT audience (who the token is intended for)
JWT_AUDIENCE=

# Database settings
# ❗️ Required: 'POSTGRES_DB', 'POSTGRES_USER', 'POSTGRES_PASSWORD' and check other connection settings
POSTGRES_DB=
POSTGRES_USER=
POSTGRES_PASSWORD=
# POSTGRES_HOST: use 'db' for docker-compose, 'localhost' for local dev
POSTGRES_HOST=db
# POSTGRES_HOST=localhost
# POSTGRES_PORT: use 5432 for docker-compose, 5433 for local dev if needed
POSTGRES_PORT=5432
# POSTGRES_PORT=5433

# External database settings for local migrations
POSTGRES_HOST_EXTERNAL=localhost
POSTGRES_PORT_EXTERNAL=5433

# Rate limiting settings
RATE_LIMIT_PUBLIC_REQUESTS=1000  # requests per minute for public APIs
RATE_LIMIT_ADMIN_REQUESTS=2000   # requests per minute for admin APIs
RATE_LIMIT_AUTH_ATTEMPTS=50     # login attempts per minute
RATE_LIMIT_WINDOW=60            # window in seconds
RATE_LIMIT_PUBLIC_IMAGES_REQUESTS=10000  # soft limit per minute for GET /images/{id}
RATE_LIMIT_BACKEND=redis        # memory|redis (set to memory when Redis is unavailable locally)

# Optional Redis password (if set, docker-compose will start Redis with --requirepass)
REDIS_PASSWORD=

# Uploads
# Maximum upload size in megabytes for image uploads
MAX_UPLOAD_SIZE_MB=40

# ❗️Admin user settings (initial admin)
ADMIN_USERNAME=
ADMIN_PASSWORD=

# Trusted hosts / CORS (tighten in production)
# Comma-separated hostnames (TrustedHostMiddleware). Default '*' in dev if empty.
TRUSTED_HOSTS=
# Comma-separated origins for CORS, e.g. http://localhost:3000,https://your-domain
CORS_ALLOW_ORIGINS=
# Optional CORS fine-tuning
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOW_HEADERS=Authorization,Content-Type

# Content Security Policy (CSP)
# Enable per-request nonce for script-src and optionally 'strict-dynamic'
CSP_ENABLE_NONCE=true
CSP_ENABLE_STRICT_DYNAMIC=false

# Documentation exposure (Swagger/Redoc)
# In dev you can enable docs by setting to false.
# In production keep them disabled for security.
DISABLE_DOCS=true

# Security middleware configuration
# Blocked User-Agents (comma-separated substrings, case-insensitive)
SECURITY_BLOCKED_USER_AGENTS=sqlmap,nikto,nmap,scanner,bot,crawler,spider
# Allowed User-Agents (comma-separated substrings). If matched, UA is allowed even if blocked list matches
SECURITY_ALLOWED_USER_AGENTS=
# Sensitive path/query regex patterns (semicolon-separated). If empty, defaults are used.
SECURITY_PATTERNS_SENSITIVE=
# Conservative API query patterns (semicolon-separated). If empty, defaults are used.
SECURITY_PATTERNS_API_QUERY=
# Path prefixes to skip security scanning entirely (comma-separated)
SECURITY_ALLOWED_PATH_PREFIXES=

# Proxy / Forwarded headers handling
# Trust X-Forwarded-For/X-Real-IP when behind a proxy (uvicorn --proxy-headers)
ENABLE_PROXY_HEADERS=false
# Optional: comma-separated proxy IPs/CIDRs to accept forwarded headers from
TRUSTED_PROXIES=
# Optional: pass through to uvicorn for additional safety (matches proxy peers)
# Example: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
FORWARDED_ALLOW_IPS=

# HTTPS Strict Transport Security (enable only behind TLS)
ENABLE_HSTS=false

# Deployment environment
# Values: development (default), staging, production
# Used for logging levels, security settings, and feature flags
# Defaults to 'development' if not set
ENV=development
